#Meta interview question
1.CREATE TABLE practice (user_id INT, follower_id INT);

INSERT INTO practice values(1, 2), (1, 3), (2, 4), (5, 1), (5, 3), 
(11, 7), (12, 8), (13, 5), (13, 10), 
(14, 12), (14, 3), (15, 14), (15, 13)
select * from practice;

Have to find the total famous percentage of the follower 

WITH cte AS (
    SELECT user_id, COUNT(follower_id) AS follower
    FROM practice
    GROUP BY user_id
)
SELECT user_id,
       (follower * 100.0 / SUM(follower) OVER ()) AS percentage
FROM cte
ORDER BY user_id ;

OutPut:
user_id	percentage
1	15.384615384615
2	7.692307692307
5	15.384615384615
11	7.692307692307
12	7.692307692307
13	15.384615384615
14	15.384615384615
15	15.384615384615

2.calculate the month-over-month percentage change in revenue. The output should include the year-month date (YYYY-MM) and percentage change, rounded to the 2nd decimal point.

CREATE TABLE sf_transactions(id INT, created_at datetime, value INT, purchase_id INT);

INSERT INTO sf_transactions VALUES
(1, '2019-01-01 00:00:00',  172692, 43), (2,'2019-01-05 00:00:00',  177194, 36),(3, '2019-01-09 00:00:00',  109513, 30),(4, '2019-01-13 00:00:00',  164911, 30),
(5, '2019-01-17 00:00:00',  198872, 39), (6, '2019-01-21 00:00:00',  184853, 31),(7, '2019-01-25 00:00:00',  186817, 26), (8, '2019-01-29 00:00:00',  137784, 22),
(9, '2019-02-02 00:00:00',  140032, 25), (10, '2019-02-06 00:00:00', 116948, 43), (11, '2019-02-10 00:00:00', 162515, 25), (12, '2019-02-14 00:00:00', 114256, 12), 
(13, '2019-02-18 00:00:00', 197465, 48), (14, '2019-02-22 00:00:00', 120741, 20), (15, '2019-02-26 00:00:00', 100074, 49), (16, '2019-03-02 00:00:00', 157548, 19), 
(17, '2019-03-06 00:00:00', 105506, 16), (18, '2019-03-10 00:00:00', 189351, 46), (19, '2019-03-14 00:00:00', 191231, 29), (20, '2019-03-18 00:00:00', 120575, 44), 
(21, '2019-03-22 00:00:00', 151688, 47), (22, '2019-03-26 00:00:00', 102327, 18), (23, '2019-03-30 00:00:00', 156147, 25);

#SQL_Server
WITH cte AS (
 SELECT FORMAT(created_at, 'yyyy-MM') AS date, 
 SUM(value) AS sum_value
 FROM practice
 GROUP BY FORMAT(created_at, 'yyyy-MM')
),
last_month AS(
select date,sum_value,
LAG(sum_value) over(order by date)as last_month
from cte
)
SELECT *,
CASE WHEN last_month is null then NULL
ELSE (sum_value-last_month)*100.0/last_month
END AS 
per_change from last_month

3.CREATE TABLE ms_projects(id int, title varchar(15), budget int);
INSERT INTO ms_projects VALUES (1, 'Project1',  29498),(2, 'Project2',  32487),(3, 'Project3',  43909),(4, 'Project4',  15776),(5, 'Project5',  36268),
(6, 'Project6',  41611),(7, 'Project7',  34003),(8, 'Project8',  49284),(9, 'Project9',  32341),(10, 'Project10',    47587),(11, 'Project11',    11705),
(12, 'Project12',    10468),(13, 'Project13',    43238),(14, 'Project14',    30014),(15, 'Project15',    48116),(16, 'Project16',    19922),(17, 'Project17',    19061),
(18, 'Project18',    10302),(19, 'Project19',    44986),(20, 'Project20',    19497);

CREATE TABLE ms_emp_projects(emp_id int, project_id int);
INSERT INTO ms_emp_projects VALUES (10592,  1),(10593,  2),(10594,  3),(10595,  4),(10596,  5),(10597,  6),(10598,  7),(10599,  8),(10600,  9),(10601,  10),
(10602, 11),(10603, 12),(10604, 13),(10605, 14),(10606, 15),(10607, 16),(10608, 17),(10609, 18),(10610, 19),(10611, 20);

SELECT 
    a.title,
    ROUND(a.budget / COUNT(b.emp_id), 0) AS budget_1employee
FROM practice a 
JOIN practice1 b ON a.id = b.project_id
GROUP BY a.title, a.budget
ORDER BY budget_1employee DESC;
