#Meta interview question
1.CREATE TABLE practice (user_id INT, follower_id INT);

INSERT INTO practice values(1, 2), (1, 3), (2, 4), (5, 1), (5, 3), 
(11, 7), (12, 8), (13, 5), (13, 10), 
(14, 12), (14, 3), (15, 14), (15, 13)
select * from practice;

Have to find the total famous percentage of the follower 

WITH cte AS (
    SELECT user_id, COUNT(follower_id) AS follower
    FROM practice
    GROUP BY user_id
)
SELECT user_id,
       (follower * 100.0 / SUM(follower) OVER ()) AS percentage
FROM cte
ORDER BY user_id ;

OutPut:
user_id	percentage
1	15.384615384615
2	7.692307692307
5	15.384615384615
11	7.692307692307
12	7.692307692307
13	15.384615384615
14	15.384615384615
15	15.384615384615

2.calculate the month-over-month percentage change in revenue. The output should include the year-month date (YYYY-MM) and percentage change, rounded to the 2nd decimal point.

CREATE TABLE sf_transactions(id INT, created_at datetime, value INT, purchase_id INT);

INSERT INTO sf_transactions VALUES
(1, '2019-01-01 00:00:00',  172692, 43), (2,'2019-01-05 00:00:00',  177194, 36),(3, '2019-01-09 00:00:00',  109513, 30),(4, '2019-01-13 00:00:00',  164911, 30),
(5, '2019-01-17 00:00:00',  198872, 39), (6, '2019-01-21 00:00:00',  184853, 31),(7, '2019-01-25 00:00:00',  186817, 26), (8, '2019-01-29 00:00:00',  137784, 22),
(9, '2019-02-02 00:00:00',  140032, 25), (10, '2019-02-06 00:00:00', 116948, 43), (11, '2019-02-10 00:00:00', 162515, 25), (12, '2019-02-14 00:00:00', 114256, 12), 
(13, '2019-02-18 00:00:00', 197465, 48), (14, '2019-02-22 00:00:00', 120741, 20), (15, '2019-02-26 00:00:00', 100074, 49), (16, '2019-03-02 00:00:00', 157548, 19), 
(17, '2019-03-06 00:00:00', 105506, 16), (18, '2019-03-10 00:00:00', 189351, 46), (19, '2019-03-14 00:00:00', 191231, 29), (20, '2019-03-18 00:00:00', 120575, 44), 
(21, '2019-03-22 00:00:00', 151688, 47), (22, '2019-03-26 00:00:00', 102327, 18), (23, '2019-03-30 00:00:00', 156147, 25);

#SQL_Server
WITH cte AS (
 SELECT FORMAT(created_at, 'yyyy-MM') AS date, 
 SUM(value) AS sum_value
 FROM practice
 GROUP BY FORMAT(created_at, 'yyyy-MM')
),
last_month AS(
select date,sum_value,
LAG(sum_value) over(order by date)as last_month
from cte
)
SELECT *,
CASE WHEN last_month is null then NULL
ELSE (sum_value-last_month)*100.0/last_month
END AS 
per_change from last_month


3.Find the genre of the person with the most number of oscar winnings.
If there are more than one person with the same number of oscar wins, return the first one in alphabetic order based on their name. Use the names as keys when joining the tables.

CREATE TABLE practice(name varchar(20), amg_person_id varchar(10), top_genre varchar(10), birthday datetime, id int);

INSERT INTO practice VALUES('Jennifer Lawrence','P562566','Drama','1990-08-15',755),('Jonah Hill','P418718','Comedy','1983-12-20',747),('Anne Hathaway', 'P292630','Drama', '1982-11-12',744),('Jennifer Hudson','P454405','Drama', '1981-09-12',742),('Rinko Kikuchi', 'P475244','Drama', '1981-01-06', 739);

CREATE TABLE practice1(year int, category varchar(30), nominee varchar(20), movie varchar(30), winner int, id int);

INSERT INTO practice1 VALUES(2008,'actress in a leading role','Anne Hathaway','Rachel Getting Married',0,77),(2012,'actress in a supporting role','Anne HathawayLes','Mis_rables',1,78),(2006,'actress in a supporting role','Jennifer Hudson','Dreamgirls',1,711),(2010,'actress in a leading role','Jennifer Lawrence','Winters Bone',1,717),(2012,'actress in a leading role','Jennifer Lawrence','Silver Linings Playbook',1,718),(2011,'actor in a supporting role','Jonah Hill','Moneyball',0,799),(2006,'actress in a supporting role','Rinko Kikuchi','Babel',0,1253);

select * from practice;
select * from practice1;
with cte(select nominee,count(*) from practice1 group by nominee)
select top 1 a.top_genre from practice a join practice1 b on a.name=b.nominee
